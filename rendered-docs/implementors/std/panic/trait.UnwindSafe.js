(function() {var implementors = {};
implementors["libsignal_bridge"] = [{"text":"impl UnwindSafe for CallbackError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FfiIdentityKeyStoreStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FfiPreKeyStoreStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FfiSignedPreKeyStoreStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FfiSessionStoreStruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FfiSenderKeyStoreStruct","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SignalFfiError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FfiDirection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Env","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AutoByteSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThrownException","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for JniIdentityKeyStore&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for JniPreKeyStore&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for JniSignedPreKeyStore&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for JniSessionStore&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for JniSenderKeyStore&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SignalJniError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for FinalizableOption&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AssumedImmutableBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PersistentAssumedImmutableBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for PersistentBoxedValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodePreKeyStore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeSignedPreKeyStore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeSessionStore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeIdentityKeyStore","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeSenderKeyStore","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DefaultFinalize&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AsyncEnv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CallbackError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TransformHelper&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FfiCiphertextMessageType","synthetic":true,"types":[]}];
implementors["libsignal_bridge_macros"] = [{"text":"impl UnwindSafe for ResultKind","synthetic":true,"types":[]}];
implementors["signal_neon_futures"] = [{"text":"impl UnwindSafe for PersistentException","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for JsFuture&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, F, T&gt; UnwindSafe for JsFutureBuilder&lt;'a, F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()