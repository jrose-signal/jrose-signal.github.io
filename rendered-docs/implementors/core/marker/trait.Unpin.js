(function() {var implementors = {};
implementors["libsignal_bridge"] = [{"text":"impl Unpin for CallbackError","synthetic":true,"types":[]},{"text":"impl Unpin for FfiIdentityKeyStoreStruct","synthetic":true,"types":[]},{"text":"impl Unpin for FfiPreKeyStoreStruct","synthetic":true,"types":[]},{"text":"impl Unpin for FfiSignedPreKeyStoreStruct","synthetic":true,"types":[]},{"text":"impl Unpin for FfiSessionStoreStruct","synthetic":true,"types":[]},{"text":"impl Unpin for FfiSenderKeyStoreStruct","synthetic":true,"types":[]},{"text":"impl Unpin for SignalFfiError","synthetic":true,"types":[]},{"text":"impl Unpin for FfiDirection","synthetic":true,"types":[]},{"text":"impl Unpin for Env","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AutoByteSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ThrownException","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for JniIdentityKeyStore&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for JniPreKeyStore&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for JniSignedPreKeyStore&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for JniSessionStore&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for JniSenderKeyStore&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SignalJniError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FinalizableOption&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AssumedImmutableBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for PersistentAssumedImmutableBuffer","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PersistentBoxedValue&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for NodePreKeyStore","synthetic":true,"types":[]},{"text":"impl Unpin for NodeSignedPreKeyStore","synthetic":true,"types":[]},{"text":"impl Unpin for NodeSessionStore","synthetic":true,"types":[]},{"text":"impl Unpin for NodeIdentityKeyStore","synthetic":true,"types":[]},{"text":"impl Unpin for NodeSenderKeyStore","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DefaultFinalize&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AsyncEnv","synthetic":true,"types":[]},{"text":"impl Unpin for CallbackError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TransformHelper&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FfiCiphertextMessageType","synthetic":true,"types":[]}];
implementors["libsignal_bridge_macros"] = [{"text":"impl Unpin for ResultKind","synthetic":true,"types":[]}];
implementors["signal_neon_futures"] = [{"text":"impl Unpin for PersistentException","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for JsFuture&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, F, T&gt; Unpin for JsFutureBuilder&lt;'a, F, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()