initSidebarItems({"enum":[["SignalJniError","The top-level error type for when something goes wrong."]],"fn":[["box_object",""],["call_method_checked","Calls a method and translates any thrown exceptions to [`SignalProtocolError::ApplicationCallbackError`]."],["check_jobject_type","Verifies that a Java object is a non-`null` instance of the given class."],["expect_ready","Polls a future once; panics if it is not Ready."],["get_object_with_native_handle","Calls a method, then clones the Rust value from the result."],["get_object_with_serialization","Calls a method, then serializes the result."],["jint_to_u32",""],["jint_to_u8",""],["jlong_to_u64",""],["jobject_from_native_handle","Constructs a Java object from the given boxed Rust value."],["jobject_from_serialized","Constructs a Java object from its serialized form."],["native_handle_cast",""],["run_ffi_safe",""],["throw_error","Translates errors into Java exceptions."],["to_jbytearray",""]],"mod":[["convert",""],["error",""],["storage",""]],"struct":[["AutoByteSlice","A wrapper around [`jni::objects::AutoArray`] that also stores the array's length."],["JniIdentityKeyStore",""],["JniPreKeyStore",""],["JniSenderKeyStore",""],["JniSessionStore",""],["JniSignedPreKeyStore",""],["ThrownException","A lifetime-less reference to a thrown Java exception that can be used as an [`Error`]."]],"trait":[["ArgTypeInfo","Converts arguments from their JNI form to their Rust form."],["JniDummyValue","Provides a dummy value to return when an exception is thrown."],["ResultTypeInfo","Converts result values from their Rust form to their FFI form."],["SimpleArgTypeInfo","A simpler interface for [`ArgTypeInfo`] for when no local storage is needed."]],"type":[["JavaIdentityKeyStore",""],["JavaPreKeyStore",""],["JavaSenderKeyStore",""],["JavaSessionStore",""],["JavaSignedPreKeyStore",""],["ObjectHandle","The type of boxed Rust values, as surfaced in JavaScript."],["SignalJniResult",""]]});